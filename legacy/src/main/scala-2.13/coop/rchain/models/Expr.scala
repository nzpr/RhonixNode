// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package coop.rchain.models
import coop.rchain.models.BigIntTypeMapper.bigIntBytesTypeMapper
import coop.rchain.models.ParMapTypeMapper.parMapEMapTypeMapper
import coop.rchain.models.ParSetTypeMapper.parSetESetTypeMapper

/** Any process may be an operand to an expression.
  * Only processes equivalent to a ground process of compatible type will reduce.
  */
@SerialVersionUID(0L)
final case class Expr(
    exprInstance: coop.rchain.models.Expr.ExprInstance = coop.rchain.models.Expr.ExprInstance.Empty
    ) extends coop.rchain.models.StacksafeMessage[Expr] with scalapb.lenses.Updatable[Expr] {

    def mergeFromM[F[_]: cats.effect.Sync](`_input__`: _root_.com.google.protobuf.CodedInputStream): F[coop.rchain.models.Expr] = {
      
      import cats.effect.Sync
      import cats.syntax.all.*
      
      Sync[F].defer {
        var __exprInstance = this.exprInstance
        var _done__ = false
        
        Sync[F].whileM_ (Sync[F].delay { !_done__ }) {
          for {
            _tag__ <- Sync[F].delay { _input__.readTag() }
            _ <- _tag__ match {
              case 0 => Sync[F].delay { _done__ = true }
              case 8 =>
                for {
                  readValue       <- Sync[F].delay { _input__.readBool() }
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.GBool(customTypeValue) }
                } yield ()
              case 16 =>
                for {
                  readValue       <- Sync[F].delay { _input__.readSInt64() }
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.GInt(customTypeValue) }
                } yield ()
              case 274 =>
                for {
                  readValue       <- Sync[F].delay { _input__.readBytes() }
                  customTypeValue =  coop.rchain.models.Expr._typemapper_gBigInt.toCustom(readValue)
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.GBigInt(customTypeValue) }
                } yield ()
              case 26 =>
                for {
                  readValue       <- Sync[F].delay { _input__.readStringRequireUtf8() }
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.GString(customTypeValue) }
                } yield ()
              case 34 =>
                for {
                  readValue       <- Sync[F].delay { _input__.readStringRequireUtf8() }
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.GUri(customTypeValue) }
                } yield ()
              case 202 =>
                for {
                  readValue       <- Sync[F].delay { _input__.readBytes() }
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.GByteArray(customTypeValue) }
                } yield ()
              case 42 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eNotBody.getOrElse(coop.rchain.models.ENot.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.ENotBody(customTypeValue) }
                } yield ()
              case 50 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eNegBody.getOrElse(coop.rchain.models.ENeg.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.ENegBody(customTypeValue) }
                } yield ()
              case 58 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eMultBody.getOrElse(coop.rchain.models.EMult.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EMultBody(customTypeValue) }
                } yield ()
              case 66 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eDivBody.getOrElse(coop.rchain.models.EDiv.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EDivBody(customTypeValue) }
                } yield ()
              case 74 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.ePlusBody.getOrElse(coop.rchain.models.EPlus.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EPlusBody(customTypeValue) }
                } yield ()
              case 82 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eMinusBody.getOrElse(coop.rchain.models.EMinus.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EMinusBody(customTypeValue) }
                } yield ()
              case 90 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eLtBody.getOrElse(coop.rchain.models.ELt.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.ELtBody(customTypeValue) }
                } yield ()
              case 98 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eLteBody.getOrElse(coop.rchain.models.ELte.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.ELteBody(customTypeValue) }
                } yield ()
              case 106 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eGtBody.getOrElse(coop.rchain.models.EGt.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EGtBody(customTypeValue) }
                } yield ()
              case 114 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eGteBody.getOrElse(coop.rchain.models.EGte.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EGteBody(customTypeValue) }
                } yield ()
              case 122 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eEqBody.getOrElse(coop.rchain.models.EEq.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EEqBody(customTypeValue) }
                } yield ()
              case 130 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eNeqBody.getOrElse(coop.rchain.models.ENeq.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.ENeqBody(customTypeValue) }
                } yield ()
              case 138 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eAndBody.getOrElse(coop.rchain.models.EAnd.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EAndBody(customTypeValue) }
                } yield ()
              case 146 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eOrBody.getOrElse(coop.rchain.models.EOr.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EOrBody(customTypeValue) }
                } yield ()
              case 154 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eVarBody.getOrElse(coop.rchain.models.EVar.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EVarBody(customTypeValue) }
                } yield ()
              case 162 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eListBody.getOrElse(coop.rchain.models.EList.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EListBody(customTypeValue) }
                } yield ()
              case 170 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eTupleBody.getOrElse(coop.rchain.models.ETuple.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.ETupleBody(customTypeValue) }
                } yield ()
              case 178 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eSetBody.map(coop.rchain.models.Expr._typemapper_eSetBody.toBase(_)).getOrElse(coop.rchain.models.ESet.defaultInstance))
                  customTypeValue =  coop.rchain.models.Expr._typemapper_eSetBody.toCustom(readValue)
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.ESetBody(customTypeValue) }
                } yield ()
              case 186 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eMapBody.map(coop.rchain.models.Expr._typemapper_eMapBody.toBase(_)).getOrElse(coop.rchain.models.EMap.defaultInstance))
                  customTypeValue =  coop.rchain.models.Expr._typemapper_eMapBody.toCustom(readValue)
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EMapBody(customTypeValue) }
                } yield ()
              case 194 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eMethodBody.getOrElse(coop.rchain.models.EMethod.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EMethodBody(customTypeValue) }
                } yield ()
              case 218 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eMatchesBody.getOrElse(coop.rchain.models.EMatches.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EMatchesBody(customTypeValue) }
                } yield ()
              case 226 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.ePercentPercentBody.getOrElse(coop.rchain.models.EPercentPercent.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EPercentPercentBody(customTypeValue) }
                } yield ()
              case 234 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.ePlusPlusBody.getOrElse(coop.rchain.models.EPlusPlus.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EPlusPlusBody(customTypeValue) }
                } yield ()
              case 242 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eMinusMinusBody.getOrElse(coop.rchain.models.EMinusMinus.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EMinusMinusBody(customTypeValue) }
                } yield ()
              case 250 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eModBody.getOrElse(coop.rchain.models.EMod.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EModBody(customTypeValue) }
                } yield ()
              case 258 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eShortAndBody.getOrElse(coop.rchain.models.EShortAnd.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EShortAndBody(customTypeValue) }
                } yield ()
              case 266 =>
                for {
                  readValue       <- coop.rchain.models.SafeParser.readMessage(_input__, exprInstance.eShortOrBody.getOrElse(coop.rchain.models.EShortOr.defaultInstance))
                  customTypeValue =  readValue
                  _               <- Sync[F].delay { __exprInstance = coop.rchain.models.Expr.ExprInstance.EShortOrBody(customTypeValue) }
                } yield ()
            case tag => Sync[F].delay { _input__.skipField(tag) }
            }
          } yield ()
        }
        .map { _ => coop.rchain.models.Expr(
          exprInstance = __exprInstance
        )}
      }
    }
    
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (exprInstance.gBool.isDefined) {
        val __value = exprInstance.gBool.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, __value)
      };
      if (exprInstance.gInt.isDefined) {
        val __value = exprInstance.gInt.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeSInt64Size(2, __value)
      };
      if (exprInstance.gBigInt.isDefined) {
        val __value = coop.rchain.models.Expr._typemapper_gBigInt.toBase(exprInstance.gBigInt.get)
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(34, __value)
      };
      if (exprInstance.gString.isDefined) {
        val __value = exprInstance.gString.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      };
      if (exprInstance.gUri.isDefined) {
        val __value = exprInstance.gUri.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      };
      if (exprInstance.gByteArray.isDefined) {
        val __value = exprInstance.gByteArray.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(25, __value)
      };
      if (exprInstance.eNotBody.isDefined) {
        val __value = exprInstance.eNotBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eNegBody.isDefined) {
        val __value = exprInstance.eNegBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eMultBody.isDefined) {
        val __value = exprInstance.eMultBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eDivBody.isDefined) {
        val __value = exprInstance.eDivBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.ePlusBody.isDefined) {
        val __value = exprInstance.ePlusBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eMinusBody.isDefined) {
        val __value = exprInstance.eMinusBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eLtBody.isDefined) {
        val __value = exprInstance.eLtBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eLteBody.isDefined) {
        val __value = exprInstance.eLteBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eGtBody.isDefined) {
        val __value = exprInstance.eGtBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eGteBody.isDefined) {
        val __value = exprInstance.eGteBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eEqBody.isDefined) {
        val __value = exprInstance.eEqBody.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eNeqBody.isDefined) {
        val __value = exprInstance.eNeqBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eAndBody.isDefined) {
        val __value = exprInstance.eAndBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eOrBody.isDefined) {
        val __value = exprInstance.eOrBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eVarBody.isDefined) {
        val __value = exprInstance.eVarBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eListBody.isDefined) {
        val __value = exprInstance.eListBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eTupleBody.isDefined) {
        val __value = exprInstance.eTupleBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eSetBody.isDefined) {
        val __value = coop.rchain.models.Expr._typemapper_eSetBody.toBase(exprInstance.eSetBody.get)
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eMapBody.isDefined) {
        val __value = coop.rchain.models.Expr._typemapper_eMapBody.toBase(exprInstance.eMapBody.get)
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eMethodBody.isDefined) {
        val __value = exprInstance.eMethodBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eMatchesBody.isDefined) {
        val __value = exprInstance.eMatchesBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.ePercentPercentBody.isDefined) {
        val __value = exprInstance.ePercentPercentBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.ePlusPlusBody.isDefined) {
        val __value = exprInstance.ePlusPlusBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eMinusMinusBody.isDefined) {
        val __value = exprInstance.eMinusMinusBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eModBody.isDefined) {
        val __value = exprInstance.eModBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eShortAndBody.isDefined) {
        val __value = exprInstance.eShortAndBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (exprInstance.eShortOrBody.isDefined) {
        val __value = exprInstance.eShortOrBody.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    
    @transient var _serializedSizeM: coop.rchain.models.Memo[Int] = null
    
    def serializedSizeM: coop.rchain.models.Memo[Int] = synchronized {
      if(_serializedSizeM == null) {
        _serializedSizeM = new coop.rchain.models.Memo(coop.rchain.models.ProtoM.serializedSize(this))
        _serializedSizeM
      } else _serializedSizeM
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      exprInstance.gBool.foreach { __v =>
        val __m = __v
        _output__.writeBool(1, __m)
      };
      exprInstance.gInt.foreach { __v =>
        val __m = __v
        _output__.writeSInt64(2, __m)
      };
      exprInstance.gString.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      exprInstance.gUri.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      exprInstance.eNotBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eNegBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eMultBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eDivBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.ePlusBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eMinusBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eLtBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eLteBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(12, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eGtBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eGteBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(14, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eEqBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(15, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eNeqBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(16, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eAndBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(17, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eOrBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(18, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eVarBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(19, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eListBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(20, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eTupleBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(21, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eSetBody.foreach { __v =>
        val __m = coop.rchain.models.Expr._typemapper_eSetBody.toBase(__v)
        _output__.writeTag(22, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eMapBody.foreach { __v =>
        val __m = coop.rchain.models.Expr._typemapper_eMapBody.toBase(__v)
        _output__.writeTag(23, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eMethodBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(24, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.gByteArray.foreach { __v =>
        val __m = __v
        _output__.writeBytes(25, __m)
      };
      exprInstance.eMatchesBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(27, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.ePercentPercentBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(28, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.ePlusPlusBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(29, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eMinusMinusBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(30, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eModBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(31, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eShortAndBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(32, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.eShortOrBody.foreach { __v =>
        val __m = __v
        _output__.writeTag(33, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      exprInstance.gBigInt.foreach { __v =>
        val __m = coop.rchain.models.Expr._typemapper_gBigInt.toBase(__v)
        _output__.writeBytes(34, __m)
      };
    }
    def getGBool: _root_.scala.Boolean = exprInstance.gBool.getOrElse(false)
    def withGBool(__v: _root_.scala.Boolean): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GBool(__v))
    def getGInt: _root_.scala.Long = exprInstance.gInt.getOrElse(0L)
    def withGInt(__v: _root_.scala.Long): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GInt(__v))
    def getGBigInt: scala.math.BigInt = exprInstance.gBigInt.getOrElse(coop.rchain.models.Expr._typemapper_gBigInt.toCustom(_root_.com.google.protobuf.ByteString.EMPTY))
    def withGBigInt(__v: scala.math.BigInt): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GBigInt(__v))
    def getGString: _root_.scala.Predef.String = exprInstance.gString.getOrElse("")
    def withGString(__v: _root_.scala.Predef.String): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GString(__v))
    def getGUri: _root_.scala.Predef.String = exprInstance.gUri.getOrElse("")
    def withGUri(__v: _root_.scala.Predef.String): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GUri(__v))
    def getGByteArray: _root_.com.google.protobuf.ByteString = exprInstance.gByteArray.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withGByteArray(__v: _root_.com.google.protobuf.ByteString): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GByteArray(__v))
    def getENotBody: coop.rchain.models.ENot = exprInstance.eNotBody.getOrElse(coop.rchain.models.ENot.defaultInstance)
    def withENotBody(__v: coop.rchain.models.ENot): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ENotBody(__v))
    def getENegBody: coop.rchain.models.ENeg = exprInstance.eNegBody.getOrElse(coop.rchain.models.ENeg.defaultInstance)
    def withENegBody(__v: coop.rchain.models.ENeg): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ENegBody(__v))
    def getEMultBody: coop.rchain.models.EMult = exprInstance.eMultBody.getOrElse(coop.rchain.models.EMult.defaultInstance)
    def withEMultBody(__v: coop.rchain.models.EMult): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMultBody(__v))
    def getEDivBody: coop.rchain.models.EDiv = exprInstance.eDivBody.getOrElse(coop.rchain.models.EDiv.defaultInstance)
    def withEDivBody(__v: coop.rchain.models.EDiv): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EDivBody(__v))
    def getEPlusBody: coop.rchain.models.EPlus = exprInstance.ePlusBody.getOrElse(coop.rchain.models.EPlus.defaultInstance)
    def withEPlusBody(__v: coop.rchain.models.EPlus): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EPlusBody(__v))
    def getEMinusBody: coop.rchain.models.EMinus = exprInstance.eMinusBody.getOrElse(coop.rchain.models.EMinus.defaultInstance)
    def withEMinusBody(__v: coop.rchain.models.EMinus): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMinusBody(__v))
    def getELtBody: coop.rchain.models.ELt = exprInstance.eLtBody.getOrElse(coop.rchain.models.ELt.defaultInstance)
    def withELtBody(__v: coop.rchain.models.ELt): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ELtBody(__v))
    def getELteBody: coop.rchain.models.ELte = exprInstance.eLteBody.getOrElse(coop.rchain.models.ELte.defaultInstance)
    def withELteBody(__v: coop.rchain.models.ELte): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ELteBody(__v))
    def getEGtBody: coop.rchain.models.EGt = exprInstance.eGtBody.getOrElse(coop.rchain.models.EGt.defaultInstance)
    def withEGtBody(__v: coop.rchain.models.EGt): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EGtBody(__v))
    def getEGteBody: coop.rchain.models.EGte = exprInstance.eGteBody.getOrElse(coop.rchain.models.EGte.defaultInstance)
    def withEGteBody(__v: coop.rchain.models.EGte): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EGteBody(__v))
    def getEEqBody: coop.rchain.models.EEq = exprInstance.eEqBody.getOrElse(coop.rchain.models.EEq.defaultInstance)
    def withEEqBody(__v: coop.rchain.models.EEq): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EEqBody(__v))
    def getENeqBody: coop.rchain.models.ENeq = exprInstance.eNeqBody.getOrElse(coop.rchain.models.ENeq.defaultInstance)
    def withENeqBody(__v: coop.rchain.models.ENeq): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ENeqBody(__v))
    def getEAndBody: coop.rchain.models.EAnd = exprInstance.eAndBody.getOrElse(coop.rchain.models.EAnd.defaultInstance)
    def withEAndBody(__v: coop.rchain.models.EAnd): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EAndBody(__v))
    def getEOrBody: coop.rchain.models.EOr = exprInstance.eOrBody.getOrElse(coop.rchain.models.EOr.defaultInstance)
    def withEOrBody(__v: coop.rchain.models.EOr): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EOrBody(__v))
    def getEVarBody: coop.rchain.models.EVar = exprInstance.eVarBody.getOrElse(coop.rchain.models.EVar.defaultInstance)
    def withEVarBody(__v: coop.rchain.models.EVar): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EVarBody(__v))
    def getEListBody: coop.rchain.models.EList = exprInstance.eListBody.getOrElse(coop.rchain.models.EList.defaultInstance)
    def withEListBody(__v: coop.rchain.models.EList): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EListBody(__v))
    def getETupleBody: coop.rchain.models.ETuple = exprInstance.eTupleBody.getOrElse(coop.rchain.models.ETuple.defaultInstance)
    def withETupleBody(__v: coop.rchain.models.ETuple): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ETupleBody(__v))
    def getESetBody: coop.rchain.models.ParSet = exprInstance.eSetBody.getOrElse(coop.rchain.models.Expr._typemapper_eSetBody.toCustom(coop.rchain.models.ESet.defaultInstance))
    def withESetBody(__v: coop.rchain.models.ParSet): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ESetBody(__v))
    def getEMapBody: coop.rchain.models.ParMap = exprInstance.eMapBody.getOrElse(coop.rchain.models.Expr._typemapper_eMapBody.toCustom(coop.rchain.models.EMap.defaultInstance))
    def withEMapBody(__v: coop.rchain.models.ParMap): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMapBody(__v))
    def getEMethodBody: coop.rchain.models.EMethod = exprInstance.eMethodBody.getOrElse(coop.rchain.models.EMethod.defaultInstance)
    def withEMethodBody(__v: coop.rchain.models.EMethod): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMethodBody(__v))
    def getEMatchesBody: coop.rchain.models.EMatches = exprInstance.eMatchesBody.getOrElse(coop.rchain.models.EMatches.defaultInstance)
    def withEMatchesBody(__v: coop.rchain.models.EMatches): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMatchesBody(__v))
    def getEPercentPercentBody: coop.rchain.models.EPercentPercent = exprInstance.ePercentPercentBody.getOrElse(coop.rchain.models.EPercentPercent.defaultInstance)
    def withEPercentPercentBody(__v: coop.rchain.models.EPercentPercent): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EPercentPercentBody(__v))
    def getEPlusPlusBody: coop.rchain.models.EPlusPlus = exprInstance.ePlusPlusBody.getOrElse(coop.rchain.models.EPlusPlus.defaultInstance)
    def withEPlusPlusBody(__v: coop.rchain.models.EPlusPlus): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EPlusPlusBody(__v))
    def getEMinusMinusBody: coop.rchain.models.EMinusMinus = exprInstance.eMinusMinusBody.getOrElse(coop.rchain.models.EMinusMinus.defaultInstance)
    def withEMinusMinusBody(__v: coop.rchain.models.EMinusMinus): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMinusMinusBody(__v))
    def getEModBody: coop.rchain.models.EMod = exprInstance.eModBody.getOrElse(coop.rchain.models.EMod.defaultInstance)
    def withEModBody(__v: coop.rchain.models.EMod): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EModBody(__v))
    def getEShortAndBody: coop.rchain.models.EShortAnd = exprInstance.eShortAndBody.getOrElse(coop.rchain.models.EShortAnd.defaultInstance)
    def withEShortAndBody(__v: coop.rchain.models.EShortAnd): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EShortAndBody(__v))
    def getEShortOrBody: coop.rchain.models.EShortOr = exprInstance.eShortOrBody.getOrElse(coop.rchain.models.EShortOr.defaultInstance)
    def withEShortOrBody(__v: coop.rchain.models.EShortOr): Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EShortOrBody(__v))
    def clearExprInstance: Expr = copy(exprInstance = coop.rchain.models.Expr.ExprInstance.Empty)
    def withExprInstance(__v: coop.rchain.models.Expr.ExprInstance): Expr = copy(exprInstance = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => exprInstance.gBool.orNull
        case 2 => exprInstance.gInt.orNull
        case 34 => exprInstance.gBigInt.map(coop.rchain.models.Expr._typemapper_gBigInt.toBase(_)).orNull
        case 3 => exprInstance.gString.orNull
        case 4 => exprInstance.gUri.orNull
        case 25 => exprInstance.gByteArray.orNull
        case 5 => exprInstance.eNotBody.orNull
        case 6 => exprInstance.eNegBody.orNull
        case 7 => exprInstance.eMultBody.orNull
        case 8 => exprInstance.eDivBody.orNull
        case 9 => exprInstance.ePlusBody.orNull
        case 10 => exprInstance.eMinusBody.orNull
        case 11 => exprInstance.eLtBody.orNull
        case 12 => exprInstance.eLteBody.orNull
        case 13 => exprInstance.eGtBody.orNull
        case 14 => exprInstance.eGteBody.orNull
        case 15 => exprInstance.eEqBody.orNull
        case 16 => exprInstance.eNeqBody.orNull
        case 17 => exprInstance.eAndBody.orNull
        case 18 => exprInstance.eOrBody.orNull
        case 19 => exprInstance.eVarBody.orNull
        case 20 => exprInstance.eListBody.orNull
        case 21 => exprInstance.eTupleBody.orNull
        case 22 => exprInstance.eSetBody.map(coop.rchain.models.Expr._typemapper_eSetBody.toBase(_)).orNull
        case 23 => exprInstance.eMapBody.map(coop.rchain.models.Expr._typemapper_eMapBody.toBase(_)).orNull
        case 24 => exprInstance.eMethodBody.orNull
        case 27 => exprInstance.eMatchesBody.orNull
        case 28 => exprInstance.ePercentPercentBody.orNull
        case 29 => exprInstance.ePlusPlusBody.orNull
        case 30 => exprInstance.eMinusMinusBody.orNull
        case 31 => exprInstance.eModBody.orNull
        case 32 => exprInstance.eShortAndBody.orNull
        case 33 => exprInstance.eShortOrBody.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => exprInstance.gBool.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => exprInstance.gInt.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 34 => exprInstance.gBigInt.map(__e => _root_.scalapb.descriptors.PByteString(coop.rchain.models.Expr._typemapper_gBigInt.toBase(__e))).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => exprInstance.gString.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => exprInstance.gUri.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 25 => exprInstance.gByteArray.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => exprInstance.eNotBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => exprInstance.eNegBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => exprInstance.eMultBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => exprInstance.eDivBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => exprInstance.ePlusBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => exprInstance.eMinusBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => exprInstance.eLtBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => exprInstance.eLteBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => exprInstance.eGtBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => exprInstance.eGteBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 15 => exprInstance.eEqBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 16 => exprInstance.eNeqBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 17 => exprInstance.eAndBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 18 => exprInstance.eOrBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 19 => exprInstance.eVarBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 20 => exprInstance.eListBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 21 => exprInstance.eTupleBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 22 => exprInstance.eSetBody.map(coop.rchain.models.Expr._typemapper_eSetBody.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 23 => exprInstance.eMapBody.map(coop.rchain.models.Expr._typemapper_eMapBody.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 24 => exprInstance.eMethodBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 27 => exprInstance.eMatchesBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 28 => exprInstance.ePercentPercentBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 29 => exprInstance.ePlusPlusBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 30 => exprInstance.eMinusMinusBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 31 => exprInstance.eModBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 32 => exprInstance.eShortAndBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 33 => exprInstance.eShortOrBody.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: coop.rchain.models.Expr.type = coop.rchain.models.Expr
    // @@protoc_insertion_point(GeneratedMessage[Expr])
}

object Expr extends scalapb.GeneratedMessageCompanion[coop.rchain.models.Expr] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[coop.rchain.models.Expr] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): coop.rchain.models.Expr = {
    var __exprInstance: coop.rchain.models.Expr.ExprInstance = coop.rchain.models.Expr.ExprInstance.Empty
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.GBool(_input__.readBool())
        case 16 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.GInt(_input__.readSInt64())
        case 274 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.GBigInt(coop.rchain.models.Expr._typemapper_gBigInt.toCustom(_input__.readBytes()))
        case 26 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.GString(_input__.readStringRequireUtf8())
        case 34 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.GUri(_input__.readStringRequireUtf8())
        case 202 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.GByteArray(_input__.readBytes())
        case 42 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.ENotBody(__exprInstance.eNotBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.ENot](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.ENegBody(__exprInstance.eNegBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.ENeg](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EMultBody(__exprInstance.eMultBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EMult](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EDivBody(__exprInstance.eDivBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EDiv](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EPlusBody(__exprInstance.ePlusBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EPlus](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EMinusBody(__exprInstance.eMinusBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EMinus](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 90 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.ELtBody(__exprInstance.eLtBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.ELt](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 98 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.ELteBody(__exprInstance.eLteBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.ELte](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 106 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EGtBody(__exprInstance.eGtBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EGt](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 114 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EGteBody(__exprInstance.eGteBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EGte](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 122 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EEqBody(__exprInstance.eEqBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EEq](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 130 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.ENeqBody(__exprInstance.eNeqBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.ENeq](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 138 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EAndBody(__exprInstance.eAndBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EAnd](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 146 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EOrBody(__exprInstance.eOrBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EOr](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 154 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EVarBody(__exprInstance.eVarBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EVar](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 162 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EListBody(__exprInstance.eListBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EList](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 170 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.ETupleBody(__exprInstance.eTupleBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.ETuple](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 178 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.ESetBody(coop.rchain.models.Expr._typemapper_eSetBody.toCustom(__exprInstance.eSetBody.map(coop.rchain.models.Expr._typemapper_eSetBody.toBase(_)).fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.ESet](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _))))
        case 186 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EMapBody(coop.rchain.models.Expr._typemapper_eMapBody.toCustom(__exprInstance.eMapBody.map(coop.rchain.models.Expr._typemapper_eMapBody.toBase(_)).fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EMap](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _))))
        case 194 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EMethodBody(__exprInstance.eMethodBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EMethod](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 218 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EMatchesBody(__exprInstance.eMatchesBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EMatches](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 226 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EPercentPercentBody(__exprInstance.ePercentPercentBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EPercentPercent](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 234 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EPlusPlusBody(__exprInstance.ePlusPlusBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EPlusPlus](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 242 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EMinusMinusBody(__exprInstance.eMinusMinusBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EMinusMinus](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 250 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EModBody(__exprInstance.eModBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EMod](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 258 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EShortAndBody(__exprInstance.eShortAndBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EShortAnd](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 266 =>
          __exprInstance = coop.rchain.models.Expr.ExprInstance.EShortOrBody(__exprInstance.eShortOrBody.fold(_root_.scalapb.LiteParser.readMessage[coop.rchain.models.EShortOr](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    coop.rchain.models.Expr(
        exprInstance = __exprInstance
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[coop.rchain.models.Expr] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      coop.rchain.models.Expr(
        exprInstance = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(coop.rchain.models.Expr.ExprInstance.GBool(_))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]).map(coop.rchain.models.Expr.ExprInstance.GInt(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(34).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(__e => coop.rchain.models.Expr.ExprInstance.GBigInt(coop.rchain.models.Expr._typemapper_gBigInt.toCustom(__e))))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(coop.rchain.models.Expr.ExprInstance.GString(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(coop.rchain.models.Expr.ExprInstance.GUri(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(25).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(coop.rchain.models.Expr.ExprInstance.GByteArray(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.ENot]]).map(coop.rchain.models.Expr.ExprInstance.ENotBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.ENeg]]).map(coop.rchain.models.Expr.ExprInstance.ENegBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EMult]]).map(coop.rchain.models.Expr.ExprInstance.EMultBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EDiv]]).map(coop.rchain.models.Expr.ExprInstance.EDivBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EPlus]]).map(coop.rchain.models.Expr.ExprInstance.EPlusBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EMinus]]).map(coop.rchain.models.Expr.ExprInstance.EMinusBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.ELt]]).map(coop.rchain.models.Expr.ExprInstance.ELtBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.ELte]]).map(coop.rchain.models.Expr.ExprInstance.ELteBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EGt]]).map(coop.rchain.models.Expr.ExprInstance.EGtBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EGte]]).map(coop.rchain.models.Expr.ExprInstance.EGteBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EEq]]).map(coop.rchain.models.Expr.ExprInstance.EEqBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.ENeq]]).map(coop.rchain.models.Expr.ExprInstance.ENeqBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EAnd]]).map(coop.rchain.models.Expr.ExprInstance.EAndBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EOr]]).map(coop.rchain.models.Expr.ExprInstance.EOrBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EVar]]).map(coop.rchain.models.Expr.ExprInstance.EVarBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EList]]).map(coop.rchain.models.Expr.ExprInstance.EListBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.ETuple]]).map(coop.rchain.models.Expr.ExprInstance.ETupleBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.ESet]]).map(__e => coop.rchain.models.Expr.ExprInstance.ESetBody(coop.rchain.models.Expr._typemapper_eSetBody.toCustom(__e))))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(23).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EMap]]).map(__e => coop.rchain.models.Expr.ExprInstance.EMapBody(coop.rchain.models.Expr._typemapper_eMapBody.toCustom(__e))))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(24).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EMethod]]).map(coop.rchain.models.Expr.ExprInstance.EMethodBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(27).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EMatches]]).map(coop.rchain.models.Expr.ExprInstance.EMatchesBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(28).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EPercentPercent]]).map(coop.rchain.models.Expr.ExprInstance.EPercentPercentBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(29).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EPlusPlus]]).map(coop.rchain.models.Expr.ExprInstance.EPlusPlusBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(30).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EMinusMinus]]).map(coop.rchain.models.Expr.ExprInstance.EMinusMinusBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(31).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EMod]]).map(coop.rchain.models.Expr.ExprInstance.EModBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(32).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EShortAnd]]).map(coop.rchain.models.Expr.ExprInstance.EShortAndBody(_)))
            .orElse[coop.rchain.models.Expr.ExprInstance](__fieldsMap.get(scalaDescriptor.findFieldByNumber(33).get).flatMap(_.as[_root_.scala.Option[coop.rchain.models.EShortOr]]).map(coop.rchain.models.Expr.ExprInstance.EShortOrBody(_)))
            .getOrElse(coop.rchain.models.Expr.ExprInstance.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = RhoTypesProto.javaDescriptor.getMessageTypes().get(15)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = RhoTypesProto.scalaDescriptor.messages(15)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 5 => __out = coop.rchain.models.ENot
      case 6 => __out = coop.rchain.models.ENeg
      case 7 => __out = coop.rchain.models.EMult
      case 8 => __out = coop.rchain.models.EDiv
      case 9 => __out = coop.rchain.models.EPlus
      case 10 => __out = coop.rchain.models.EMinus
      case 11 => __out = coop.rchain.models.ELt
      case 12 => __out = coop.rchain.models.ELte
      case 13 => __out = coop.rchain.models.EGt
      case 14 => __out = coop.rchain.models.EGte
      case 15 => __out = coop.rchain.models.EEq
      case 16 => __out = coop.rchain.models.ENeq
      case 17 => __out = coop.rchain.models.EAnd
      case 18 => __out = coop.rchain.models.EOr
      case 19 => __out = coop.rchain.models.EVar
      case 20 => __out = coop.rchain.models.EList
      case 21 => __out = coop.rchain.models.ETuple
      case 22 => __out = coop.rchain.models.ESet
      case 23 => __out = coop.rchain.models.EMap
      case 24 => __out = coop.rchain.models.EMethod
      case 27 => __out = coop.rchain.models.EMatches
      case 28 => __out = coop.rchain.models.EPercentPercent
      case 29 => __out = coop.rchain.models.EPlusPlus
      case 30 => __out = coop.rchain.models.EMinusMinus
      case 31 => __out = coop.rchain.models.EMod
      case 32 => __out = coop.rchain.models.EShortAnd
      case 33 => __out = coop.rchain.models.EShortOr
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = coop.rchain.models.Expr(
    exprInstance = coop.rchain.models.Expr.ExprInstance.Empty
  )
  sealed trait ExprInstance extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isGBool: _root_.scala.Boolean = false
    def isGInt: _root_.scala.Boolean = false
    def isGBigInt: _root_.scala.Boolean = false
    def isGString: _root_.scala.Boolean = false
    def isGUri: _root_.scala.Boolean = false
    def isGByteArray: _root_.scala.Boolean = false
    def isENotBody: _root_.scala.Boolean = false
    def isENegBody: _root_.scala.Boolean = false
    def isEMultBody: _root_.scala.Boolean = false
    def isEDivBody: _root_.scala.Boolean = false
    def isEPlusBody: _root_.scala.Boolean = false
    def isEMinusBody: _root_.scala.Boolean = false
    def isELtBody: _root_.scala.Boolean = false
    def isELteBody: _root_.scala.Boolean = false
    def isEGtBody: _root_.scala.Boolean = false
    def isEGteBody: _root_.scala.Boolean = false
    def isEEqBody: _root_.scala.Boolean = false
    def isENeqBody: _root_.scala.Boolean = false
    def isEAndBody: _root_.scala.Boolean = false
    def isEOrBody: _root_.scala.Boolean = false
    def isEVarBody: _root_.scala.Boolean = false
    def isEListBody: _root_.scala.Boolean = false
    def isETupleBody: _root_.scala.Boolean = false
    def isESetBody: _root_.scala.Boolean = false
    def isEMapBody: _root_.scala.Boolean = false
    def isEMethodBody: _root_.scala.Boolean = false
    def isEMatchesBody: _root_.scala.Boolean = false
    def isEPercentPercentBody: _root_.scala.Boolean = false
    def isEPlusPlusBody: _root_.scala.Boolean = false
    def isEMinusMinusBody: _root_.scala.Boolean = false
    def isEModBody: _root_.scala.Boolean = false
    def isEShortAndBody: _root_.scala.Boolean = false
    def isEShortOrBody: _root_.scala.Boolean = false
    def gBool: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def gInt: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    def gBigInt: _root_.scala.Option[scala.math.BigInt] = _root_.scala.None
    def gString: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def gUri: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def gByteArray: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    def eNotBody: _root_.scala.Option[coop.rchain.models.ENot] = _root_.scala.None
    def eNegBody: _root_.scala.Option[coop.rchain.models.ENeg] = _root_.scala.None
    def eMultBody: _root_.scala.Option[coop.rchain.models.EMult] = _root_.scala.None
    def eDivBody: _root_.scala.Option[coop.rchain.models.EDiv] = _root_.scala.None
    def ePlusBody: _root_.scala.Option[coop.rchain.models.EPlus] = _root_.scala.None
    def eMinusBody: _root_.scala.Option[coop.rchain.models.EMinus] = _root_.scala.None
    def eLtBody: _root_.scala.Option[coop.rchain.models.ELt] = _root_.scala.None
    def eLteBody: _root_.scala.Option[coop.rchain.models.ELte] = _root_.scala.None
    def eGtBody: _root_.scala.Option[coop.rchain.models.EGt] = _root_.scala.None
    def eGteBody: _root_.scala.Option[coop.rchain.models.EGte] = _root_.scala.None
    def eEqBody: _root_.scala.Option[coop.rchain.models.EEq] = _root_.scala.None
    def eNeqBody: _root_.scala.Option[coop.rchain.models.ENeq] = _root_.scala.None
    def eAndBody: _root_.scala.Option[coop.rchain.models.EAnd] = _root_.scala.None
    def eOrBody: _root_.scala.Option[coop.rchain.models.EOr] = _root_.scala.None
    def eVarBody: _root_.scala.Option[coop.rchain.models.EVar] = _root_.scala.None
    def eListBody: _root_.scala.Option[coop.rchain.models.EList] = _root_.scala.None
    def eTupleBody: _root_.scala.Option[coop.rchain.models.ETuple] = _root_.scala.None
    def eSetBody: _root_.scala.Option[coop.rchain.models.ParSet] = _root_.scala.None
    def eMapBody: _root_.scala.Option[coop.rchain.models.ParMap] = _root_.scala.None
    def eMethodBody: _root_.scala.Option[coop.rchain.models.EMethod] = _root_.scala.None
    def eMatchesBody: _root_.scala.Option[coop.rchain.models.EMatches] = _root_.scala.None
    def ePercentPercentBody: _root_.scala.Option[coop.rchain.models.EPercentPercent] = _root_.scala.None
    def ePlusPlusBody: _root_.scala.Option[coop.rchain.models.EPlusPlus] = _root_.scala.None
    def eMinusMinusBody: _root_.scala.Option[coop.rchain.models.EMinusMinus] = _root_.scala.None
    def eModBody: _root_.scala.Option[coop.rchain.models.EMod] = _root_.scala.None
    def eShortAndBody: _root_.scala.Option[coop.rchain.models.EShortAnd] = _root_.scala.None
    def eShortOrBody: _root_.scala.Option[coop.rchain.models.EShortOr] = _root_.scala.None
  }
  object ExprInstance {
    @SerialVersionUID(0L)
    case object Empty extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class GBool(value: _root_.scala.Boolean) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = _root_.scala.Boolean
      override def isGBool: _root_.scala.Boolean = true
      override def gBool: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class GInt(value: _root_.scala.Long) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = _root_.scala.Long
      override def isGInt: _root_.scala.Boolean = true
      override def gInt: _root_.scala.Option[_root_.scala.Long] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class GBigInt(value: scala.math.BigInt) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = scala.math.BigInt
      override def isGBigInt: _root_.scala.Boolean = true
      override def gBigInt: _root_.scala.Option[scala.math.BigInt] = Some(value)
      override def number: _root_.scala.Int = 34
    }
    @SerialVersionUID(0L)
    final case class GString(value: _root_.scala.Predef.String) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = _root_.scala.Predef.String
      override def isGString: _root_.scala.Boolean = true
      override def gString: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class GUri(value: _root_.scala.Predef.String) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = _root_.scala.Predef.String
      override def isGUri: _root_.scala.Boolean = true
      override def gUri: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class GByteArray(value: _root_.com.google.protobuf.ByteString) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isGByteArray: _root_.scala.Boolean = true
      override def gByteArray: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 25
    }
    @SerialVersionUID(0L)
    final case class ENotBody(value: coop.rchain.models.ENot) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.ENot
      override def isENotBody: _root_.scala.Boolean = true
      override def eNotBody: _root_.scala.Option[coop.rchain.models.ENot] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class ENegBody(value: coop.rchain.models.ENeg) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.ENeg
      override def isENegBody: _root_.scala.Boolean = true
      override def eNegBody: _root_.scala.Option[coop.rchain.models.ENeg] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class EMultBody(value: coop.rchain.models.EMult) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EMult
      override def isEMultBody: _root_.scala.Boolean = true
      override def eMultBody: _root_.scala.Option[coop.rchain.models.EMult] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class EDivBody(value: coop.rchain.models.EDiv) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EDiv
      override def isEDivBody: _root_.scala.Boolean = true
      override def eDivBody: _root_.scala.Option[coop.rchain.models.EDiv] = Some(value)
      override def number: _root_.scala.Int = 8
    }
    @SerialVersionUID(0L)
    final case class EPlusBody(value: coop.rchain.models.EPlus) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EPlus
      override def isEPlusBody: _root_.scala.Boolean = true
      override def ePlusBody: _root_.scala.Option[coop.rchain.models.EPlus] = Some(value)
      override def number: _root_.scala.Int = 9
    }
    @SerialVersionUID(0L)
    final case class EMinusBody(value: coop.rchain.models.EMinus) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EMinus
      override def isEMinusBody: _root_.scala.Boolean = true
      override def eMinusBody: _root_.scala.Option[coop.rchain.models.EMinus] = Some(value)
      override def number: _root_.scala.Int = 10
    }
    @SerialVersionUID(0L)
    final case class ELtBody(value: coop.rchain.models.ELt) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.ELt
      override def isELtBody: _root_.scala.Boolean = true
      override def eLtBody: _root_.scala.Option[coop.rchain.models.ELt] = Some(value)
      override def number: _root_.scala.Int = 11
    }
    @SerialVersionUID(0L)
    final case class ELteBody(value: coop.rchain.models.ELte) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.ELte
      override def isELteBody: _root_.scala.Boolean = true
      override def eLteBody: _root_.scala.Option[coop.rchain.models.ELte] = Some(value)
      override def number: _root_.scala.Int = 12
    }
    @SerialVersionUID(0L)
    final case class EGtBody(value: coop.rchain.models.EGt) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EGt
      override def isEGtBody: _root_.scala.Boolean = true
      override def eGtBody: _root_.scala.Option[coop.rchain.models.EGt] = Some(value)
      override def number: _root_.scala.Int = 13
    }
    @SerialVersionUID(0L)
    final case class EGteBody(value: coop.rchain.models.EGte) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EGte
      override def isEGteBody: _root_.scala.Boolean = true
      override def eGteBody: _root_.scala.Option[coop.rchain.models.EGte] = Some(value)
      override def number: _root_.scala.Int = 14
    }
    @SerialVersionUID(0L)
    final case class EEqBody(value: coop.rchain.models.EEq) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EEq
      override def isEEqBody: _root_.scala.Boolean = true
      override def eEqBody: _root_.scala.Option[coop.rchain.models.EEq] = Some(value)
      override def number: _root_.scala.Int = 15
    }
    @SerialVersionUID(0L)
    final case class ENeqBody(value: coop.rchain.models.ENeq) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.ENeq
      override def isENeqBody: _root_.scala.Boolean = true
      override def eNeqBody: _root_.scala.Option[coop.rchain.models.ENeq] = Some(value)
      override def number: _root_.scala.Int = 16
    }
    @SerialVersionUID(0L)
    final case class EAndBody(value: coop.rchain.models.EAnd) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EAnd
      override def isEAndBody: _root_.scala.Boolean = true
      override def eAndBody: _root_.scala.Option[coop.rchain.models.EAnd] = Some(value)
      override def number: _root_.scala.Int = 17
    }
    @SerialVersionUID(0L)
    final case class EOrBody(value: coop.rchain.models.EOr) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EOr
      override def isEOrBody: _root_.scala.Boolean = true
      override def eOrBody: _root_.scala.Option[coop.rchain.models.EOr] = Some(value)
      override def number: _root_.scala.Int = 18
    }
    @SerialVersionUID(0L)
    final case class EVarBody(value: coop.rchain.models.EVar) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EVar
      override def isEVarBody: _root_.scala.Boolean = true
      override def eVarBody: _root_.scala.Option[coop.rchain.models.EVar] = Some(value)
      override def number: _root_.scala.Int = 19
    }
    @SerialVersionUID(0L)
    final case class EListBody(value: coop.rchain.models.EList) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EList
      override def isEListBody: _root_.scala.Boolean = true
      override def eListBody: _root_.scala.Option[coop.rchain.models.EList] = Some(value)
      override def number: _root_.scala.Int = 20
    }
    @SerialVersionUID(0L)
    final case class ETupleBody(value: coop.rchain.models.ETuple) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.ETuple
      override def isETupleBody: _root_.scala.Boolean = true
      override def eTupleBody: _root_.scala.Option[coop.rchain.models.ETuple] = Some(value)
      override def number: _root_.scala.Int = 21
    }
    @SerialVersionUID(0L)
    final case class ESetBody(value: coop.rchain.models.ParSet) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.ParSet
      override def isESetBody: _root_.scala.Boolean = true
      override def eSetBody: _root_.scala.Option[coop.rchain.models.ParSet] = Some(value)
      override def number: _root_.scala.Int = 22
    }
    @SerialVersionUID(0L)
    final case class EMapBody(value: coop.rchain.models.ParMap) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.ParMap
      override def isEMapBody: _root_.scala.Boolean = true
      override def eMapBody: _root_.scala.Option[coop.rchain.models.ParMap] = Some(value)
      override def number: _root_.scala.Int = 23
    }
    @SerialVersionUID(0L)
    final case class EMethodBody(value: coop.rchain.models.EMethod) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EMethod
      override def isEMethodBody: _root_.scala.Boolean = true
      override def eMethodBody: _root_.scala.Option[coop.rchain.models.EMethod] = Some(value)
      override def number: _root_.scala.Int = 24
    }
    @SerialVersionUID(0L)
    final case class EMatchesBody(value: coop.rchain.models.EMatches) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EMatches
      override def isEMatchesBody: _root_.scala.Boolean = true
      override def eMatchesBody: _root_.scala.Option[coop.rchain.models.EMatches] = Some(value)
      override def number: _root_.scala.Int = 27
    }
    @SerialVersionUID(0L)
    final case class EPercentPercentBody(value: coop.rchain.models.EPercentPercent) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EPercentPercent
      override def isEPercentPercentBody: _root_.scala.Boolean = true
      override def ePercentPercentBody: _root_.scala.Option[coop.rchain.models.EPercentPercent] = Some(value)
      override def number: _root_.scala.Int = 28
    }
    @SerialVersionUID(0L)
    final case class EPlusPlusBody(value: coop.rchain.models.EPlusPlus) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EPlusPlus
      override def isEPlusPlusBody: _root_.scala.Boolean = true
      override def ePlusPlusBody: _root_.scala.Option[coop.rchain.models.EPlusPlus] = Some(value)
      override def number: _root_.scala.Int = 29
    }
    @SerialVersionUID(0L)
    final case class EMinusMinusBody(value: coop.rchain.models.EMinusMinus) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EMinusMinus
      override def isEMinusMinusBody: _root_.scala.Boolean = true
      override def eMinusMinusBody: _root_.scala.Option[coop.rchain.models.EMinusMinus] = Some(value)
      override def number: _root_.scala.Int = 30
    }
    @SerialVersionUID(0L)
    final case class EModBody(value: coop.rchain.models.EMod) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EMod
      override def isEModBody: _root_.scala.Boolean = true
      override def eModBody: _root_.scala.Option[coop.rchain.models.EMod] = Some(value)
      override def number: _root_.scala.Int = 31
    }
    @SerialVersionUID(0L)
    final case class EShortAndBody(value: coop.rchain.models.EShortAnd) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EShortAnd
      override def isEShortAndBody: _root_.scala.Boolean = true
      override def eShortAndBody: _root_.scala.Option[coop.rchain.models.EShortAnd] = Some(value)
      override def number: _root_.scala.Int = 32
    }
    @SerialVersionUID(0L)
    final case class EShortOrBody(value: coop.rchain.models.EShortOr) extends coop.rchain.models.Expr.ExprInstance {
      type ValueType = coop.rchain.models.EShortOr
      override def isEShortOrBody: _root_.scala.Boolean = true
      override def eShortOrBody: _root_.scala.Option[coop.rchain.models.EShortOr] = Some(value)
      override def number: _root_.scala.Int = 33
    }
  }
  implicit class ExprLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.Expr]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, coop.rchain.models.Expr](_l) {
    def gBool: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getGBool)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GBool(f_)))
    def gInt: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getGInt)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GInt(f_)))
    def gBigInt: _root_.scalapb.lenses.Lens[UpperPB, scala.math.BigInt] = field(_.getGBigInt)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GBigInt(f_)))
    def gString: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getGString)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GString(f_)))
    def gUri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getGUri)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GUri(f_)))
    def gByteArray: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getGByteArray)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.GByteArray(f_)))
    def eNotBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.ENot] = field(_.getENotBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ENotBody(f_)))
    def eNegBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.ENeg] = field(_.getENegBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ENegBody(f_)))
    def eMultBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EMult] = field(_.getEMultBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMultBody(f_)))
    def eDivBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EDiv] = field(_.getEDivBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EDivBody(f_)))
    def ePlusBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EPlus] = field(_.getEPlusBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EPlusBody(f_)))
    def eMinusBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EMinus] = field(_.getEMinusBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMinusBody(f_)))
    def eLtBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.ELt] = field(_.getELtBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ELtBody(f_)))
    def eLteBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.ELte] = field(_.getELteBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ELteBody(f_)))
    def eGtBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EGt] = field(_.getEGtBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EGtBody(f_)))
    def eGteBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EGte] = field(_.getEGteBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EGteBody(f_)))
    def eEqBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EEq] = field(_.getEEqBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EEqBody(f_)))
    def eNeqBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.ENeq] = field(_.getENeqBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ENeqBody(f_)))
    def eAndBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EAnd] = field(_.getEAndBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EAndBody(f_)))
    def eOrBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EOr] = field(_.getEOrBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EOrBody(f_)))
    def eVarBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EVar] = field(_.getEVarBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EVarBody(f_)))
    def eListBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EList] = field(_.getEListBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EListBody(f_)))
    def eTupleBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.ETuple] = field(_.getETupleBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ETupleBody(f_)))
    def eSetBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.ParSet] = field(_.getESetBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.ESetBody(f_)))
    def eMapBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.ParMap] = field(_.getEMapBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMapBody(f_)))
    def eMethodBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EMethod] = field(_.getEMethodBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMethodBody(f_)))
    def eMatchesBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EMatches] = field(_.getEMatchesBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMatchesBody(f_)))
    def ePercentPercentBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EPercentPercent] = field(_.getEPercentPercentBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EPercentPercentBody(f_)))
    def ePlusPlusBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EPlusPlus] = field(_.getEPlusPlusBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EPlusPlusBody(f_)))
    def eMinusMinusBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EMinusMinus] = field(_.getEMinusMinusBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EMinusMinusBody(f_)))
    def eModBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EMod] = field(_.getEModBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EModBody(f_)))
    def eShortAndBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EShortAnd] = field(_.getEShortAndBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EShortAndBody(f_)))
    def eShortOrBody: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.EShortOr] = field(_.getEShortOrBody)((c_, f_) => c_.copy(exprInstance = coop.rchain.models.Expr.ExprInstance.EShortOrBody(f_)))
    def exprInstance: _root_.scalapb.lenses.Lens[UpperPB, coop.rchain.models.Expr.ExprInstance] = field(_.exprInstance)((c_, f_) => c_.copy(exprInstance = f_))
  }
  final val G_BOOL_FIELD_NUMBER = 1
  final val G_INT_FIELD_NUMBER = 2
  final val G_BIG_INT_FIELD_NUMBER = 34
  final val G_STRING_FIELD_NUMBER = 3
  final val G_URI_FIELD_NUMBER = 4
  final val G_BYTE_ARRAY_FIELD_NUMBER = 25
  final val E_NOT_BODY_FIELD_NUMBER = 5
  final val E_NEG_BODY_FIELD_NUMBER = 6
  final val E_MULT_BODY_FIELD_NUMBER = 7
  final val E_DIV_BODY_FIELD_NUMBER = 8
  final val E_PLUS_BODY_FIELD_NUMBER = 9
  final val E_MINUS_BODY_FIELD_NUMBER = 10
  final val E_LT_BODY_FIELD_NUMBER = 11
  final val E_LTE_BODY_FIELD_NUMBER = 12
  final val E_GT_BODY_FIELD_NUMBER = 13
  final val E_GTE_BODY_FIELD_NUMBER = 14
  final val E_EQ_BODY_FIELD_NUMBER = 15
  final val E_NEQ_BODY_FIELD_NUMBER = 16
  final val E_AND_BODY_FIELD_NUMBER = 17
  final val E_OR_BODY_FIELD_NUMBER = 18
  final val E_VAR_BODY_FIELD_NUMBER = 19
  final val E_LIST_BODY_FIELD_NUMBER = 20
  final val E_TUPLE_BODY_FIELD_NUMBER = 21
  final val E_SET_BODY_FIELD_NUMBER = 22
  final val E_MAP_BODY_FIELD_NUMBER = 23
  final val E_METHOD_BODY_FIELD_NUMBER = 24
  final val E_MATCHES_BODY_FIELD_NUMBER = 27
  final val E_PERCENT_PERCENT_BODY_FIELD_NUMBER = 28
  final val E_PLUS_PLUS_BODY_FIELD_NUMBER = 29
  final val E_MINUS_MINUS_BODY_FIELD_NUMBER = 30
  final val E_MOD_BODY_FIELD_NUMBER = 31
  final val E_SHORT_AND_BODY_FIELD_NUMBER = 32
  final val E_SHORT_OR_BODY_FIELD_NUMBER = 33
  @transient
  private[models] val _typemapper_gBigInt: _root_.scalapb.TypeMapper[_root_.com.google.protobuf.ByteString, scala.math.BigInt] = implicitly[_root_.scalapb.TypeMapper[_root_.com.google.protobuf.ByteString, scala.math.BigInt]]
  @transient
  private[models] val _typemapper_eSetBody: _root_.scalapb.TypeMapper[coop.rchain.models.ESet, coop.rchain.models.ParSet] = implicitly[_root_.scalapb.TypeMapper[coop.rchain.models.ESet, coop.rchain.models.ParSet]]
  @transient
  private[models] val _typemapper_eMapBody: _root_.scalapb.TypeMapper[coop.rchain.models.EMap, coop.rchain.models.ParMap] = implicitly[_root_.scalapb.TypeMapper[coop.rchain.models.EMap, coop.rchain.models.ParMap]]
  def of(
    exprInstance: coop.rchain.models.Expr.ExprInstance
  ): _root_.coop.rchain.models.Expr = _root_.coop.rchain.models.Expr(
    exprInstance
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[Expr])
}
